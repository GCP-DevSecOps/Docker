[Version]
docker version
docker -v
docker --version

[Information]
docker info

[Run]
docker run IMAGE_ID
docker run IMAGE_NAME
docker run IMAGE_NAME:TAG
docker run DOCKER_HUB_USER_ID/REPOSITORY_NAME
docker run DOCKER_HUB_USER_ID/REPOSITORY_NAME:TAG
docker run -p HOST_PORT:CONTAINER_PORT IMAGE_NAME
docker run -p HOST_PORT:CONTAINER_PORT IMAGE_NAME:TAG
docker run -p HOST_PORT:CONTAINER_PORT DOCKER_HUB_USER_ID/REPOSITORY_NAME
docker run -p HOST_PORT:CONTAINER_PORT DOCKER_HUB_USER_ID/REPOSITORY_NAME:TAG
docker run -e VARIABLE=VALUE -p HOST_PORT:CONTAINER_PORT -p HOST_PORT:CONTAINER_PORT IMAGE_NAME:TAG
docker run --name CONTAINER_NAME IMAGE_NAME
docker run --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT IMAGE_NAME
docker run --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT -p HOST_PORT:CONTAINER_PORT -v /CONTAINER_PATH_FOLDER_NAME/FOLDER_NAME IMAGE_NAME:TAG
docker run --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT DOCKER_HUB_USER_ID/REPOSITORY_NAME:TAG
docker run --rm --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT REGISTRY_HOSTNAME_IPADDRESS:REGISTRY_PORT/IMAGE_NAME:TAG
docker run -i --rm --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT IMAGE_NAME:TAG
docker run -t -p HOST_PORT:CONTAINER_PORT DOCKER_HUB_USER_ID/REPOSITORY_NAME:TAG
docker run -t -e "VARIABLE=VALUE" -p HOST_PORT:CONTAINER_PORT DOCKER_HUB_USER_ID/REPOSITORY_NAME:TAG
docker run -i -t IMAGE_NAME /bin/bash
docker run -it IMAGE_ID
docker run -it IMAGE_NAME
docker run -it IMAGE_NAME sh
docker run -it IMAGE_NAME:TAG
docker run -it --net NETWORK_NAME IMAGE_NAME sh 
docker run -it -p HOST_PORT:CONTAINER_PORT IMAGE_NAME
docker run -it DOCKER_HUB_USER_ID/REPOSITORY_NAME
docker run -it -p HOST_PORT:CONTAINER_PORT DOCKER_HUB_USER_ID/REPOSITORY_NAME
docker run -it --rm DOCKER_HUB_USER_ID/REPOSITORY_NAME
docker run -it --rm -e VARIABLE=VALUE -e VARIABLE=VALUE -p HOST_PORT:CONTAINER_PORT -p HOST_PORT:CONTAINER_PORT IMAGE_NAME:TAG
docker run -it --rm -p HOST_PORT:CONTAINER_PORT -v /HOST_PATH_FOLDER_NAME/FILE_NAME:/CONTAINER_PATH_FOLDER_NAME/FILE_NAME IMAGE_NAME
docker run -it --rm --name CONTAINER_NAME IMAGE_NAME sh                             # exit from a container will be deleted
docker run -it --rm --name CONTAINER_NAME IMAGE_NAME:TAG bash
docker run -it --rm --name CONTAINER_NAME DOCKER_HUB_USER_ID/REPOSITORY_NAME
docker run -it --rm -p HOST_PORT:CONTAINER_PORT --name="CONTAINER_NAME" IMAGE_NAME
docker run -it --name CONTAINER_NAME IMAGE_NAME
docker run -it --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT -v HOST_PATH_FOLDER_NAME/FILE_NAME:/CONTAINER_PATH_FOLDER_NAME/FILE_NAME IMAGE_NAME:TAG
docker run -it --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT -v HOST_PATH_FOLDER_NAME/FILE_NAME:/CONTAINER_PATH_FOLDER_NAME/FILE_NAME IMAGE_NAME:TAG /bin/bash -c "LINUX_COMMANDS"
docker run -it --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT -v HOST_PATH_FOLDER_NAME/FILE_NAME:/CONTAINER_PATH_FOLDER_NAME/FILE_NAME IMAGE_NAME:TAG /bin/bash -c "LINUX_COMMANDS; LINUX_COMMANDS"
docker run -it --name=CONTAINER_NAME --mount source=VOLUME_NAME,target=/CONTAINER_PATH_FOLDER_NAME IMAGE_NAME
docker run -itd IMAGE_ID
docker run -itd IMAGE_NAME
docker run -itd IMAGE_NAME:TAG
docker run -itd -p HOST_PORT:CONTAINER_PORT IMAGE_NAME
docker run -itd --name=CONTAINER_NAME IMAGE_NAME
docker run -itd --name=CONTAINER_NAME --network=NETWORK_TYPES_NAME IMAGE_NAME
docker run -itd --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT IMAGE_NAME
docker run -itd --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT DOCKER_HUB_USER_ID/REPOSITORY_NAME
docker run -itd --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT DOCKER_HUB_USER_ID/REPOSITORY_NAME:TAG
docker run -itd --rm --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT IMAGE_NAME
docker run -d -it IMAGE_NAME
docker run -d -it --name CONTAINER_NAME IMAGE_NAME
docker run -d -it -v HOST_PATH_FOLDER_NAME:/CONTAINER_PATH_FOLDER_NAME IMAGE_NAME
docker run -d -it -v $(pwd):/CONTAINER_PATH_FOLDER_NAME IMAGE_NAME
docker run -d -t -p HOST_PORT:CONTAINER_PORT IMAGE_NAME
docker run -d -t -p HOST_PORT:CONTAINER_PORT IMAGE_NAME:TAG
docker run -d --rm --net NETWORK_NAME --name CONTAINER_NAME IMAGE_NAME
docker run -d --rm --network NETWORK_NAME --name CONTAINER_NAME IMAGE_NAME
docker run -d --rm -p HOST_PORT:CONTAINER_PORT --name CONTAINER_NAME REGISTRY_HOSTNAME_IPADDRESS:REGISTRY_PORT/IMAGE_NAME
docker run -d --rm -p HOST_PORT:CONTAINER_PORT --name CONTAINER_NAME REGISTRY_HOSTNAME_IPADDRESS:REGISTRY_PORT/IMAGE_NAME:TAG
docker run --detach --rm --name CONTAINER_NAME IMAGE_NAME
docker run -d -p HOST_PORT:CONTAINER_PORT IMAGE_NAME
docker run -d -p HOST_PORT:CONTAINER_PORT IMAGE_NAME:TAG
docker run -d -p HOST_PORT:CONTAINER_PORT DOCKER_HUB_USER_ID/REPOSITORY_NAME
docker run -d -p HOST_PORT:CONTAINER_PORT DOCKER_HUB_USER_ID/REPOSITORY_NAME:TAG
docker run -d -p HOST_PORT:CONTAINER_PORT REGISTRY_HOSTNAME_IPADDRESS:REGISTRY_PORT/IMAGE_NAME:TAG
docker run -d -p HOST_PORT:CONTAINER_PORT -p HOST_PORT:CONTAINER_PORT -v $PWD/FILE_NAME:/CONTAINER_PATH_FOLDER_NAME/FILE_NAME IMAGE_NAME:TAG
docker run -d -p HOST_PORT:CONTAINER_PORT -p HOST_PORT:CONTAINER_PORT -v $PWD/FILE_NAME:/CONTAINER_PATH_FOLDER_NAME/CONTAINER_PATH_FOLDER_NAME/FILE_NAME IMAGE_NAME:TAG
docker run -d --name CONTAINER_NAME IMAGE_NAME
docker run -d --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT IMAGE_NAME
docker run -d --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT IMAGE_NAME:TAG
docker run -d --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT -p HOST_PORT:CONTAINER_PORT IMAGE_NAME
docker run -d --name CONTAINER_NAME -p "LOCALHOST_IP_ADDRESS:HOST_PORT:CONTAINER_PORT" IMAGE_NAME:TAG --restart always
docker run -d --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT -v HOST_PATH_FOLDER_NAME/FILE_NAME:/CONTAINER_PATH_FOLDER_NAME IMAGE_NAME:TAG
docker run -d --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT -v VOLUME_NAME:/CONTAINER_PATH_FOLDER_NAME/FOLDER_NAME IMAGE_NAME:TAG
docker run -d --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT --mount source=VOLUME_NAME,target=/CONTAINER_PATH_FOLDER_NAME IMAGE_NAME
docker run -d --name CONTAINER_NAME DOCKER_HUB_USER_ID/REPOSITORY_NAME
docker run -d --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT DOCKER_HUB_USER_ID/REPOSITORY_NAME
docker run -d --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT --network NETWORK_NAME DOCKER_HUB_USER_ID/REPOSITORY_NAME
docker run -d --name CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT DOCKER_HUB_USER_ID/REPOSITORY_NAME:TAG
docker run -d --name=CONTAINER_NAME -p HOST_PORT:CONTAINER_PORT DOCKER_HUB_USER_ID/REPOSITORY_NAME:TAG
docker run --detach --name CONTAINER_NAME --publish HOST_PORT:CONTAINER_PORT --restart unless-stopped IMAGE_NAME
docker run --detach --name CONTAINER_NAME --publish "LOCALHOST_IP_ADDRESS:HOST_PORT:CONTAINER_PORT" IMAGE_NAME:TAG

[Pull]
docker pull IMAGE_NAME
docker pull IMAGE_NAME:TAG
docker pull DOCKER_HUB_USER_ID/REPOSITORY_NAME
docker pull DOCKER_HUB_USER_ID/REPOSITORY_NAME:TAG
docker pull REGISTRY_HOSTNAME_IPADDRESS:REGISTRY_PORT/IMAGE_NAME:TAG

[List the Containers]
docker ps
docker ps -a
docker ps -q -f name=CONTAINER_NAME
docker ps --filter="name=CONTAINER_NAME"

[List of Images]
docker images
docker images -a
docker images IMAGE_NAME

[Remove Images]
docker rmi IMAGE_ID
docker rmi -f IMAGE_ID
docker rmi IMAGE_NAME
docker rmi -f IMAGE_NAME
docker rmi IMAGE_NAME:TAG
docker rmi -f IMAGE_NAME:TAG
docker rmi DOCKER_HUB_USER_ID/REPOSITORY_NAME
docker rmi -f DOCKER_HUB_USER_ID/REPOSITORY_NAME
docker rmi DOCKER_HUB_USER_ID/REPOSITORY_NAME:TAG
docker rmi -f DOCKER_HUB_USER_ID/REPOSITORY_NAME:TAG
docker rmi REGISTRY_HOSTNAME_IPADDRESS:REGISTRY_PORT/IMAGE_NAME
docker rmi -f REGISTRY_HOSTNAME_IPADDRESS:REGISTRY_PORT/IMAGE_NAME
docker rmi REGISTRY_HOSTNAME_IPADDRESS:REGISTRY_PORT/IMAGE_NAME:TAG
docker rmi -f REGISTRY_HOSTNAME_IPADDRESS:REGISTRY_PORT/IMAGE_NAME:TAG

[Remove Containers]
docker rm CONTAINER_ID
docker rm -f CONTAINER_ID
docker rm CONTAINER_NAME
docker rm -f CONTAINER_NAME
docker rm --force CONTAINER_NAME
docker rm $(docker ps -aq)
docker rm -f -v $(docker ps -q)

[Start]
docker start CONTAINER_ID
docker start CONTAINER_NAME

[Stop]
docker stop CONTAINER_ID
docker stop CONTAINER_NAME

[Dockerfile_Build]
docker build .
docker build -f Dockerfile_NAME .
docker build -t NAME .
docker build -t NAME:TAG .
docker build -t NAME -f Dockerfile_NAME .
docker build -t NAME:TAG -f Dockerfile_NAME .
docker build -t NAME -f FOLDER_NAME/Dockerfile_NAME .
docker build -t NAME:TAG -f FOLDER_NAME/Dockerfile_NAME .
docker build -t DOCKER_HUB_USER_ID/REPOSITORY_NAME .
docker build -t DOCKER_HUB_USER_ID/REPOSITORY_NAME:TAG .
docker build -t DOCKER_HUB_USER_ID/REPOSITORY_NAME:TAG -f Dockerfile_NAME .
docker build -t REGISTRY_HOSTNAME_IPADDRESS:REGISTRY_PORT/IMAGE_NAME .
docker build -t REGISTRY_HOSTNAME_IPADDRESS:REGISTRY_PORT/IMAGE_NAME:TAG .
docker build --tag NAME:TAG .
docker build --tag=NAME .
docker build --tag DOCKER_HUB_USER_ID/REPOSITORY_NAME:TAG .
docker build --rm --tag DOCKER_HUB_USER_ID/REPOSITORY_NAME:TAG .                                                            # remove intermediate containers after a successful build
docker build --build-arg VARIABLE=VALUE -t DOCKER_HUB_USER_ID/REPOSITORY_NAME:TAG .
